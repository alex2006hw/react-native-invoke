afterEvaluate {
  def sdkPath = prepareAndroidHome()

  copyLicenseFiles( sdkPath )
}

private String prepareAndroidHome()
{
  def localProperties = new File( project.rootDir, 'local.properties' )

  def properties = new Properties()
  if ( localProperties.exists() )
  {
    localProperties.withInputStream { properties.load it }
  }

  def sdkDirProperty = 'sdk.dir'
  def sdkDirPath = properties.getProperty sdkDirProperty

  if ( sdkDirPath == null )
  {
    sdkDirPath = System.getenv( 'ANDROID_HOME' )
  }

  if ( sdkDirPath == null )
  {

    def androidSdkPath = "${System.getProperty( 'user.home' )}/.android"

    if ( localProperties.exists() )
    {
      localProperties.withWriterAppend( 'UTF-8' ) {
        it.write "$sdkDirProperty=$androidSdkPath\n" as String
      }
    }
    else
    {
      localProperties.withWriter( 'UTF-8' ) {
        it.write "# DO NOT check this file into source control.\n"
        it.write "$sdkDirProperty=$androidSdkPath\n" as String
      }
    }

    sdkDirPath = androidSdkPath
  }

  return sdkDirPath
}

private void copyLicenseFiles( String sdkPath )
{
  def destinationDir = new File( sdkPath )
  if ( !destinationDir.exists() )
  {
    destinationDir.mkdirs()
  }

  destinationDir = new File( "${destinationDir}/licenses" )
  if ( !destinationDir.exists() )
  {
    destinationDir.mkdirs()
  }

  def sourceDir = file( "${project.rootDir}/extra/licenses" )
  files { sourceDir.listFiles() }.forEach {
    def licenseFile = file( "${destinationDir}/${it.name}" )
    if ( !licenseFile.exists() )
    {
      copy {
        from( sourceDir )
        into( destinationDir )
        include( licenseFile.name )
      }
    }
  }
}